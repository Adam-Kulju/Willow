#ifndef __constants__
#define __constants__

#define WHITE 0
#define BLACK 1
#define BLANK 0
#define WPAWN 2
#define BPAWN 3
#define WKNIGHT 4
#define BKNIGHT 5
#define WBISHOP 6
#define BBISHOP 7
#define WROOK 8
#define BROOK 9
#define WQUEEN 10
#define BQUEEN 11
#define WKING 12
#define BKING 13
// all we have to do is (board[i] & 1) to see if the color is white or black - if that is 1 then it's black if not then it's white

#define NORTH 16
#define SOUTH -16
#define EAST 1
#define WEST -1
#define NE 17
#define SE -15
#define NW 15
#define SW -17
#define SSW -33
#define SSE -31
#define WSW -18
#define ESE -14
#define WNW 14
#define ENE 18
#define NNW 31
#define NNE 33
#define PAWN 1
#define KNIGHT 2
#define BISHOP 3
#define ROOK 4
#define QUEEN 5
#define KING 6

#define LISTSIZE 150
#define MOVESIZE 1000
#define NN 312
#define MM 156
#define MATRIX_A 0xB5026F5AA96619E9ULL
#define UM 0xFFFFFFFF80000000ULL /* Most significant 33 bits */
#define LM 0x7FFFFFFFULL         /* Least significant 31 bits */
// #define TTSIZE 1 << 20
// #define _mask (1 << 20) - 1
#define CHECKTIME (1 << 10) - 1
#define TIMEOUT 111111
#define TEMPO 5
#define MAX(a, b) ((a) > (b) ? (a) : (b))
#define MIN(a, b) ((a) < (b) ? (a) : (b))
#define MAXPHASE 24
const int VALUES[5] = {75, 299, 297, 409, 819};
const int VALUES2[5] = {82, 338, 349, 584, 1171};
const int pstbonusesm[6][0x80] = {
    {
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
 -25,  -13,  -11,   -6,    1,   18,   14,  -20,    0,    0,    0,    0,    0,    0,    0,    0, 
 -28,  -13,   -7,   -3,   10,    3,    7,  -13,    0,    0,    0,    0,    0,    0,    0,    0, 
 -28,  -15,   -8,    4,    4,    3,  -15,  -20,    0,    0,    0,    0,    0,    0,    0,    0, 
 -23,   -8,   -7,   -9,    9,   11,    1,  -14,    0,    0,    0,    0,    0,    0,    0,    0, 
  -2,   10,   25,   29,   60,   87,   46,    7,    0,    0,    0,    0,    0,    0,    0,    0, 
  67,  112,   46,   74,   55,  142,   32,  -29,    0,    0,    0,    0,    0,    0,    0,    0, 
   0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    },
    {
 -99,  -11,  -36,  -14,    3,   -5,   -4,   -7,    0,    0,    0,    0,    0,    0,    0,    0, 
 -16,  -42,   -9,   10,   10,   19,   -3,    5,    0,    0,    0,    0,    0,    0,    0,    0, 
 -21,   -8,    5,    8,   24,   15,   18,   -3,    0,    0,    0,    0,    0,    0,    0,    0, 
  -4,    4,   13,   20,   26,   23,   22,    5,    0,    0,    0,    0,    0,    0,    0,    0, 
 -12,   11,   10,   46,   26,   50,   17,   23,    0,    0,    0,    0,    0,    0,    0,    0, 
 -45,   37,   14,   41,   59,   93,   60,   45,    0,    0,    0,    0,    0,    0,    0,    0, 
 -80,  -63,   52,   -2,   -6,   36,  -18,  -15,    0,    0,    0,    0,    0,    0,    0,    0, 
-167, -101,  -93,  -47,   -5,  -96,  -37, -105,    0,    0,    0,    0,    0,    0,    0,    0
    },
    {
 -15,   27,   10,    8,   14,   12,  -13,   -1,    0,    0,    0,    0,    0,    0,    0,    0, 
  22,   22,   22,   10,   24,   30,   44,   18,    0,    0,    0,    0,    0,    0,    0,    0, 
   8,   23,   20,   21,   21,   28,   22,   19,    0,    0,    0,    0,    0,    0,    0,    0, 
   4,   14,   15,   29,   37,    9,   11,   14,    0,    0,    0,    0,    0,    0,    0,    0, 
  -3,   19,   12,   44,   26,   27,   14,    1,    0,    0,    0,    0,    0,    0,    0,    0, 
 -10,   23,   28,   29,   22,   49,   37,   18,    0,    0,    0,    0,    0,    0,    0,    0, 
 -35,   -1,  -24,  -43,   13,   18,   -6,  -42,    0,    0,    0,    0,    0,    0,    0,    0, 
 -17,  -29, -121, -113,  -51,  -70,  -23,  -12,    0,    0,    0,    0,    0,    0,    0,    0
    },

    {
   0,    5,   17,   25,   30,   23,   19,    3,    0,    0,    0,    0,    0,    0,    0,    0, 
 -24,   -7,   -1,    9,   19,   19,   17,  -34,    0,    0,    0,    0,    0,    0,    0,    0, 
 -25,  -13,    0,   -4,   13,   13,   18,   -9,    0,    0,    0,    0,    0,    0,    0,    0, 
 -31,  -26,   -5,    0,   11,   -2,   15,  -20,    0,    0,    0,    0,    0,    0,    0,    0, 
 -26,  -11,    6,   21,   19,   20,    1,  -13,    0,    0,    0,    0,    0,    0,    0,    0, 
 -22,    3,   14,   20,   -2,   34,   58,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
   4,   10,   39,   42,   58,   62,   13,   27,    0,    0,    0,    0,    0,    0,    0,    0, 
   5,   28,  -21,   34,   35,  -25,  -15,   -3,    0,    0,    0,    0,    0,    0,    0,    0
    },
    {
   8,   10,   13,   23,   16,    1,    1,  -41,    0,    0,    0,    0,    0,    0,    0,    0, 
 -13,    7,   17,   24,   24,   30,   23,   23,    0,    0,    0,    0,    0,    0,    0,    0, 
 -15,   13,    3,    6,    7,   12,   17,    4,    0,    0,    0,    0,    0,    0,    0,    0, 
   4,  -25,    0,   -4,    4,    0,    6,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
 -34,  -14,  -16,  -27,  -25,   -7,  -12,  -10,    0,    0,    0,    0,    0,    0,    0,    0, 
  -6,  -19,   -2,  -23,   -8,   30,    6,   20,    0,    0,    0,    0,    0,    0,    0,    0, 
 -20,  -44,  -24,  -14,  -47,   18,  -15,   40,    0,    0,    0,    0,    0,    0,    0,    0, 
 -29,  -44,   -7,  -52,   48,   33,   16,   34,    0,    0,    0,    0,    0,    0,    0,    0, 

    },
    {
 -12,   53,   28,  -64,   -7,  -33,   31,   22,    0,    0,    0,    0,    0,    0,    0,    0, 
  10,   18,  -21,  -60,  -45,  -26,   11,   11,    0,    0,    0,    0,    0,    0,    0,    0, 
 -38,   11,  -28,  -49,  -59,  -44,  -14,  -43,    0,    0,    0,    0,    0,    0,    0,    0, 
 -68,   12,  -21,  -88,  -90,  -57,  -75, -122,    0,    0,    0,    0,    0,    0,    0,    0, 
 -28,   -7,    8,   -8,  -26,  -25,  -18, -122,    0,    0,    0,    0,    0,    0,    0,    0, 
 -15,   36,   60,    8,   33,   67,   97,  -50,    0,    0,    0,    0,    0,    0,    0,    0, 
  31,   24,    4,   33,   -6,   -6,  -46,  -58,    0,    0,    0,    0,    0,    0,    0,    0, 
 -72,   33,   23,  -11,  -73,  -53,   10,    9,    0,    0,    0,    0,    0,    0,    0,    0
    }

};


const int pstbonusese[6][0x80] = {
    {
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
  34,   31,   26,   24,   35,   25,   11,   17,    0,    0,    0,    0,    0,    0,    0,    0, 
  33,   30,   21,   23,   27,   20,   15,   18,    0,    0,    0,    0,    0,    0,    0,    0, 
  37,   36,   22,   17,   16,   18,   21,   19,    0,    0,    0,    0,    0,    0,    0,    0, 
  54,   46,   31,   13,   17,   17,   31,   34,    0,    0,    0,    0,    0,    0,    0,    0, 
  72,   66,   37,    5,  -13,    4,   37,   50,    0,    0,    0,    0,    0,    0,    0,    0, 
 103,   77,   77,   42,   46,   25,   73,  108,    0,    0,    0,    0,    0,    0,    0,    0, 
   0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0
    },
    {
 -12,  -32,  -16,   -6,  -19,  -15,  -34,  -41,    0,    0,    0,    0,    0,    0,    0,    0, 
 -40,  -13,  -16,  -18,  -15,  -28,  -20,  -43,    0,    0,    0,    0,    0,    0,    0,    0, 
 -25,  -12,  -13,    8,    4,  -16,  -28,  -19,    0,    0,    0,    0,    0,    0,    0,    0, 
  -9,  -10,   14,   19,   18,    9,    1,   -7,    0,    0,    0,    0,    0,    0,    0,    0, 
  -6,   -2,   25,   19,   21,   10,    5,  -11,    0,    0,    0,    0,    0,    0,    0,    0, 
 -19,  -22,   12,    7,   -8,  -14,  -26,  -44,    0,    0,    0,    0,    0,    0,    0,    0, 
  -9,    3,  -34,    1,   -6,  -31,  -20,  -49,    0,    0,    0,    0,    0,    0,    0,    0, 
 -32,  -31,   -1,  -31,  -13,  -28,  -40,  -81,    0,    0,    0,    0,    0,    0,    0,    0
    },
    {
  -9,   -7,   -3,   -7,   -7,   -1,   -2,  -10,    0,    0,    0,    0,    0,    0,    0,    0, 
 -11,  -19,  -13,   -7,   -7,  -12,  -16,  -25,    0,    0,    0,    0,    0,    0,    0,    0, 
  -9,   -2,    4,    3,   11,   -5,   -4,   -8,    0,    0,    0,    0,    0,    0,    0,    0, 
  -9,   -4,    6,   14,    1,    5,   -9,  -10,    0,    0,    0,    0,    0,    0,    0,    0, 
  -2,    0,    7,    8,   10,    6,   -4,    3,    0,    0,    0,    0,    0,    0,    0,    0, 
   7,   -8,   -5,   -7,   -4,   -3,   -4,    8,    0,    0,    0,    0,    0,    0,    0,    0, 
   6,   -6,    3,   -7,   -9,   -9,   -3,    3,    0,    0,    0,    0,    0,    0,    0,    0, 
 -13,  -12,    4,    6,   -2,   -2,   -7,  -21,    0,    0,    0,    0,    0,    0,    0,    0
    },
    {
  -9,   -9,   -7,  -11,  -17,  -14,   -7,  -23,    0,    0,    0,    0,    0,    0,    0,    0, 
  -5,   -7,   -2,   -5,  -19,  -21,  -18,   -2,    0,    0,    0,    0,    0,    0,    0,    0, 
   3,    2,   -5,    0,  -12,  -17,  -14,  -11,    0,    0,    0,    0,    0,    0,    0,    0, 
  11,   15,   10,    6,   -1,   -1,   -6,    1,    0,    0,    0,    0,    0,    0,    0,    0, 
  19,   14,   16,    3,    2,    4,    4,   12,    0,    0,    0,    0,    0,    0,    0,    0, 
  18,   16,   11,    7,   12,   -4,   -6,    3,    0,    0,    0,    0,    0,    0,    0,    0, 
  13,   15,   11,    7,   -8,   -3,   13,    8,    0,    0,    0,    0,    0,    0,    0,    0, 
  14,    6,   26,    6,    6,   20,   15,   13,    0,    0,    0,    0,    0,    0,    0,    0
    },
    {
 -27,  -38,  -15,  -23,   -4,  -38,  -21,  -27,    0,    0,    0,    0,    0,    0,    0,    0, 
  -9,  -17,  -28,  -26,  -21,  -31,  -55,  -52,    0,    0,    0,    0,    0,    0,    0,    0, 
  13,  -27,   31,   11,   22,   20,    5,    9,    0,    0,    0,    0,    0,    0,    0,    0, 
 -12,   52,   33,   62,   45,   23,   19,    7,    0,    0,    0,    0,    0,    0,    0,    0, 
  34,   36,   38,   74,   79,   35,   48,   21,    0,    0,    0,    0,    0,    0,    0,    0, 
  -9,   17,   18,   65,   66,   16,    6,  -12,    0,    0,    0,    0,    0,    0,    0,    0, 
   2,   42,   51,   63,   79,   27,   37,   -3,    0,    0,    0,    0,    0,    0,    0,    0, 
 -12,   44,   31,   51,   -5,    5,   -9,  -11,    0,    0,    0,    0,    0,    0,    0,    0, 
    },
    {
 -70,  -54,  -27,   -9,  -29,  -15,  -42,  -72,    0,    0,    0,    0,    0,    0,    0,    0, 
 -38,  -18,    7,   18,   15,    7,   -8,  -29,    0,    0,    0,    0,    0,    0,    0,    0, 
 -23,   -8,   15,   28,   33,   20,    3,  -12,    0,    0,    0,    0,    0,    0,    0,    0, 
 -22,   -7,   24,   46,   47,   34,   21,    3,    0,    0,    0,    0,    0,    0,    0,    0, 
 -16,   16,   29,   34,   38,   41,   31,   17,    0,    0,    0,    0,    0,    0,    0,    0, 
   2,   14,   14,   25,   23,   40,   35,   12,    0,    0,    0,    0,    0,    0,    0,    0, 
 -18,   14,   19,   13,   22,   41,   32,   20,    0,    0,    0,    0,    0,    0,    0,    0, 
 -76,  -36,  -35,  -17,    0,   18,    1,  -16,    0,    0,    0,    0,    0,    0,    0,    0
    }
};

const int bishop_pair[9] = {55, 70, 46, 47, 41, 35, 32, 35, 39};
const int passedmgbonus[8] = {0,  -10,  -19,  -15,    8,   -6,   22,    0};
const int passedegbonus[8] = {0,    8,   11,   40,   68,  155,  174,    0};

const int blockedmgbonus[8] = {0,  -15,  -22,  -18,   -5,    4,   -9,    0};
const int blockedegbonus[8] = {0,   10,   20,   26,   26,   44,   71,    0};

const int protectedpassedmg[8] = {0,    0,   14,   12,   16,   49,   15,    0};
const int protectedpassedeg[8] = {0,    0,    4,    2,    8,   14,   17,    0};

const int blockedprotectedmg[8] = {0,    0,    0,   -2,   15,   50,   27,    0};
const int blockedprotectedeg[8] = {0,    0,   19,   16,   31,   41,   19,    0};

const int candidatepassedmg[8] = {0,  -15,  -24,    3,   33,   57,    0,    0};
const int candidatepassedeg[8] = {0,  -10,    6,   34,   54,   76,    0,    0};

const int mobilitybonusesmg[4][28] = {
    {-30, -19, -8, -2, 4, 9, 17, 24, 36},
    {-29, -18, -8, -1, 7, 12, 16, 17, 18, 21, 34, 56, 35, 63},
    {-33, -20, -16, -12, -13, -5, 0, 7, 13, 18, 24, 28, 35, 37, 15},
    {-1, -12, -24, -23, -22, -19, -16, -14, -11, -9, -8, -5, -3, -3, -1, 2, -8, -7, 1, 10, 16, 43, 30, 20, 24, 9, 2, 0}};

const int mobilitybonuseseg[4][28] = {
    {-67, -13, 9, 20, 27, 35, 35, 32, 21},
    {-45, -21, -4, 10, 20, 30, 35, 39, 43, 42, 35, 32, 46, 32},
    {-19, 14, 28, 34, 44, 48, 54, 58, 62, 67, 70, 74, 76, 74, 87},
    {0, -2, -6, -9, -13, -17, -16, -12, -10, -7, -3, 0, 0, 4, 4, 5, 27, 25, 21, 14, 15, 2, 5, 13, 16, 12, 3, -1}};
const int doubledpen = -16;
const int isopen = -12;
const int backwardspen = -4;

const int kingdangertablemg[4][100] = {

{
   0,    0,    1,    2,   44,   39,   54,   77,   88,   65, 
  77,  114,   95,  137,  139,   93,  188,  150,  218,  162, 
 144,  212,  185,  243,  199,  146,  246,  193,  229,  181, 
 242,  246,  229,  235,  248,  308,  274,  232,  251,  277, 
 283,  267,  273,  261,  294,  246,  234,  249,  258,  324, 
 367,  294,  302,  359,  365,  404,  418,  421,  437,  451, 
 493,  494,  492,  472,  490,  486,  491,  492,  498,  480, 
 496,  500,  495,  500,  495,  498,  500,  497,  500,  489, 
 500,  498,  499,  500,  492,  500,  500,  500,  500,  495, 
 500,  498,  500,  500,  500,  500,  500,  500,  500,  500, 
},
{
   0,    0,    1,    2,   22,   11,   33,   30,   56,   46, 
  26,   78,   55,   87,   73,   39,  105,   72,  115,   85, 
  60,  131,   84,  152,  118,   84,  150,  120,  158,  135, 
 167,  174,  207,  175,  226,  270,  216,  242,  208,  204, 
 285,  228,  232,  234,  235,  231,  252,  251,  221,  340, 
 346,  353,  319,  338,  341,  417,  391,  437,  446,  444, 
 464,  492,  469,  486,  489,  488,  490,  491,  491,  491, 
 492,  494,  498,  500,  496,  498,  498,  500,  500,  499, 
 500,  500,  499,  498,  500,  500,  495,  500,  500,  500, 
 500,  500,  500,  501,  500,  500,  500,  497,  500,  501, 
},
{
   0,    0,    1,    2,   -2,   -3,    5,    4,   15,   16, 
   4,   26,   13,   42,   22,   15,   46,   32,   63,   45, 
  23,   74,   50,   97,   62,   72,   84,  106,  123,  103, 
 104,  110,  129,  122,  100,  164,  148,  194,  165,  140, 
 162,  220,  190,  180,  229,  260,  263,  272,  295,  314, 
 371,  361,  347,  360,  390,  437,  427,  447,  445,  454, 
 495,  494,  485,  483,  497,  493,  489,  496,  500,  500, 
 500,  500,  500,  500,  500,  500,  496,  500,  500,  499, 
 500,  500,  499,  500,  500,  500,  500,  500,  500,  500, 
 500,  498,  500,  500,  500,  500,  500,  500,  500,  500, 
},
{
   0,    0,    1,    2,  -13,  -10,  -13,  -11,  -13,   -7, 
  -1,   -1,   -4,    2,    0,    1,   11,   11,   15,    5, 
  -3,   19,   17,   14,    9,   22,   12,   28,   41,   24, 
  15,   45,   45,   79,   85,  132,  132,  127,  231,  211, 
 183,  216,  206,  278,  263,  289,  330,  301,  320,  338, 
 387,  377,  359,  386,  395,  437,  446,  460,  460,  460, 
 495,  494,  491,  490,  497,  492,  493,  496,  500,  500, 
 500,  500,  500,  500,  500,  500,  500,  500,  500,  499, 
 500,  500,  499,  500,  500,  500,  500,  500,  500,  500, 
 500,  500,  500,  500,  500,  500,  500,  500,  500,  500, 
}
};

const int kingdangertableeg[4][100] = {

{
   0,    0,    1,    2,   -8,   35,  -12,    2,  -17,    1, 
  15,   -5,   -4,  -34,   -5,   12,  -38,  -10,  -48,   -3, 
  35,  -53,   37,  -43,  -13,   45,    1,   25,   26,   78, 
  11,   43,   44,  118,   93,  -24,   28,  101,  145,  144, 
 111,   96,   90,  202,  256,  208,  190,  190,  212,  310, 
 351,  289,  292,  318,  350,  409,  398,  423,  440,  442, 
 493,  494,  488,  481,  488,  484,  490,  493,  498,  488, 
 498,  500,  497,  500,  494,  498,  500,  499,  500,  492, 
 500,  498,  499,  500,  496,  500,  500,  500,  500,  497, 
 500,  498,  500,  500,  500,  500,  500,  500,  500,  500, 
},
{
   0,    0,    1,    2,    2,   17,  -10,   11,   -9,   -9, 
  16,  -10,   -7,  -12,   10,   21,  -20,   24,  -25,   20, 
  45,  -17,   75,  -10,    3,   50,   17,   57,   34,   59, 
  26,   76,   44,  105,   17,  -34,   57,   59,  123,  167, 
 102,  118,  120,  199,  221,  204,  231,  245,  227,  326, 
 345,  352,  314,  333,  352,  426,  407,  444,  449,  435, 
 477,  493,  474,  486,  491,  489,  492,  493,  493,  494, 
 494,  498,  498,  500,  496,  498,  498,  500,  500,  499, 
 500,  500,  499,  499,  500,  500,  497,  500,  500,  500, 
 500,  500,  500,  500,  500,  500,  500,  499,  500,  500, 
},
{
   0,    0,    1,    2,    4,    4,  -10,    7,  -10,   -6, 
  -1,   -7,   -6,  -19,    7,   10,  -28,   22,  -27,   11, 
  12,    0,   16,   18,   19,   18,   43,   49,   74,   54, 
  63,   85,   93,  139,  112,  125,  123,  157,  222,  163, 
 181,  230,  213,  233,  266,  282,  306,  295,  320,  341, 
 386,  372,  354,  375,  391,  437,  440,  456,  457,  463, 
 495,  494,  490,  488,  497,  492,  491,  496,  500,  500, 
 500,  500,  500,  500,  500,  500,  498,  500,  500,  499, 
 500,  500,  499,  500,  500,  500,  500,  500,  500,  500, 
 500,  499,  500,  500,  500,  500,  500,  500,  500,  500, 
},
{
   0,    0,    1,    2,    4,    2,   -2,    7,   -6,   -2, 
  -8,   -4,   -1,   -7,   -2,  -17,    1,  -13,  -30,    3, 
   7,   43,   -5,   15,   28,   21,   72,   96,   65,   28, 
 128,   79,  138,  146,  129,  132,  141,  143,  234,  212, 
 197,  239,  211,  277,  277,  290,  325,  304,  320,  350, 
 388,  377,  359,  386,  394,  437,  446,  460,  460,  462, 
 495,  494,  491,  490,  497,  492,  493,  496,  500,  500, 
 500,  500,  500,  500,  500,  500,  500,  500,  500,  499, 
 500,  500,  499,  500,  500,  500,  500,  500,  500,  500, 
 500,  500,  500,  500,  500,  500,  500,  500,  500,  500, 
}
};

const int slide[5] = {0, 1, 1, 1, 0};
const int vectors[5] = {8, 4, 4, 8, 8};
const int vector[5][8] = {
    {SSW, SSE, WSW, ESE, WNW, ENE, NNW, NNE},
    {SW, SE, NW, NE},
    {SOUTH, WEST, EAST, NORTH},
    {SW, SOUTH, SE, WEST, NW, EAST, NE, NORTH},
    {SW, SOUTH, SE, WEST, NW, EAST, NE, NORTH}};

struct move
{
    unsigned short int move;
    // use >>8 to get SQUAREFROM and &FF to get SQUARETO
    unsigned char flags;
    // in form 0000 xx yy
    // xx = flags - 00 normal 01 promotion 10 castling 11 ep - if = 1 then yy flags - 00 knight 01 bishop 10 rook 11 queen
    // get xxflags with >>2, and yyflags with &11
};

struct board_info
{
    unsigned char board[0x80];
    unsigned char pnbrqcount[2][5];
    bool castling[2][2];
    unsigned char kingpos[2];
    unsigned char epsquare;
};

struct movelist
{
    struct move move;
    // char fen[65];
    long long unsigned int fen;
    char halfmoves;
    int staticeval;
};
struct list
{
    struct move move;
    int eval;
};

struct ttentry
{
    unsigned long long int zobrist_key;
    char type;
    // come in three types:
    // 2: EXACT, 2: FAIL-HIGH, 1: FAIL-LOW
    struct move bestmove;
    int eval;
    char depth;
    short int age;
};

const struct move nullmove = {0, 0};
const struct ttentry nullTT = {0, 0, {0, 0}, 0, 0, 0};

const int boardsize = sizeof(struct board_info);
const int listsize = sizeof(struct list);
const int movesize = sizeof(struct move);
const int attacknums[4] = {2, 2, 3, 5};

const int pieceattacksbonus[4][4] = {
    {27, 38, 24, 29},
    {0, 16, 13, 8},
    {9, 0, 14, 39},
    {0, 0, 0, 42}};
const int multattacksbonus = 24;

#endif