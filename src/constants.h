#ifndef __constants__
#define __constants__

#define WHITE 0
#define BLACK 1
#define BLANK 0
#define WPAWN 2
#define BPAWN 3
#define WKNIGHT 4
#define BKNIGHT 5
#define WBISHOP 6
#define BBISHOP 7
#define WROOK 8
#define BROOK 9
#define WQUEEN 10
#define BQUEEN 11
#define WKING 12
#define BKING 13
// all we have to do is (board[i] & 1) to see if the color is white or black - if that is 1 then it's black if not then it's white

#define NORTH 16
#define SOUTH -16
#define EAST 1
#define WEST -1
#define NE 17
#define SE -15
#define NW 15
#define SW -17
#define SSW -33
#define SSE -31
#define WSW -18
#define ESE -14
#define WNW 14
#define ENE 18
#define NNW 31
#define NNE 33
#define PAWN 1
#define KNIGHT 2
#define BISHOP 3
#define ROOK 4
#define QUEEN 5
#define KING 6

#define LISTSIZE 150
#define MOVESIZE 1000
#define NN 312
#define MM 156
#define MATRIX_A 0xB5026F5AA96619E9ULL
#define UM 0xFFFFFFFF80000000ULL /* Most significant 33 bits */
#define LM 0x7FFFFFFFULL         /* Least significant 31 bits */
// #define TTSIZE 1 << 20
// #define _mask (1 << 20) - 1
#define CHECKTIME (1 << 10) - 1
#define TIMEOUT 111111
#define TEMPO 5
#define MAX(a, b) ((a) > (b) ? (a) : (b))
#define MIN(a, b) ((a) < (b) ? (a) : (b))
#define MAXPHASE 24
const int VALUES[5] = {74,  291,  287,  397,  801};
const int VALUES2[5] = {82,  345,  357,  595, 1171};
const int pstbonusesm[6][0x80] = {
    {
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
 -24,  -15,  -12,  -10,   -3,   10,    9,  -25,    0,    0,    0,    0,    0,    0,    0,    0, 
 -26,  -13,   -9,   -4,    7,   -2,    1,  -17,    0,    0,    0,    0,    0,    0,    0,    0, 
 -27,  -17,  -12,    1,    0,   -2,  -21,  -25,    0,    0,    0,    0,    0,    0,    0,    0, 
 -21,  -11,  -14,  -15,    3,    6,   -3,  -16,    0,    0,    0,    0,    0,    0,    0,    0, 
   3,    8,   18,   20,   32,   70,   45,    8,    0,    0,    0,    0,    0,    0,    0,    0, 
  71,   98,   58,   81,   58,  126,   29,  -24,    0,    0,    0,    0,    0,    0,    0,    0, 
   0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
    },
    {
 -98,  -14,  -35,  -13,    2,   -4,   -6,   -8,    0,    0,    0,    0,    0,    0,    0,    0, 
 -18,  -40,   -9,   11,   11,   17,   -3,    4,    0,    0,    0,    0,    0,    0,    0,    0, 
 -23,   -8,    6,    8,   24,   16,   16,   -2,    0,    0,    0,    0,    0,    0,    0,    0, 
  -6,    4,   12,   20,   27,   22,   22,    5,    0,    0,    0,    0,    0,    0,    0,    0, 
 -11,    8,   13,   46,   30,   49,   17,   24,    0,    0,    0,    0,    0,    0,    0,    0, 
 -44,   35,   15,   40,   58,   91,   58,   44,    0,    0,    0,    0,    0,    0,    0,    0, 
 -78,  -60,   49,   -2,   -6,   37,  -18,  -14,    0,    0,    0,    0,    0,    0,    0,    0, 
-167, -101,  -93,  -47,   -5,  -96,  -37, -105,    0,    0,    0,    0,    0,    0,    0,    0, 
    },
    {
 -13,   29,   12,    8,   13,   11,  -11,    1,    0,    0,    0,    0,    0,    0,    0,    0, 
  22,   21,   24,   13,   27,   30,   44,   19,    0,    0,    0,    0,    0,    0,    0,    0, 
   6,   23,   20,   24,   22,   27,   22,   19,    0,    0,    0,    0,    0,    0,    0,    0, 
   3,   11,   14,   28,   35,    9,   10,   11,    0,    0,    0,    0,    0,    0,    0,    0, 
  -4,   14,   12,   42,   25,   26,   10,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
  -8,   23,   26,   29,   21,   49,   37,   22,    0,    0,    0,    0,    0,    0,    0,    0, 
 -35,   -2,  -24,  -42,   12,   16,   -6,  -39,    0,    0,    0,    0,    0,    0,    0,    0, 
 -17,  -29, -120, -113,  -51,  -70,  -23,  -13,    0,    0,    0,    0,    0,    0,    0,    0, 
    },

    {
  -3,    3,   16,   23,   28,   20,   20,    1,    0,    0,    0,    0,    0,    0,    0,    0, 
 -24,   -8,    0,    8,   17,   17,   18,  -31,    0,    0,    0,    0,    0,    0,    0,    0, 
 -25,  -14,   -1,   -4,   11,   11,   19,   -7,    0,    0,    0,    0,    0,    0,    0,    0, 
 -30,  -26,   -6,   -1,    9,   -3,   14,  -19,    0,    0,    0,    0,    0,    0,    0,    0, 
 -25,  -10,    6,   20,   18,   19,    2,  -11,    0,    0,    0,    0,    0,    0,    0,    0, 
 -21,    4,   14,   20,    1,   34,   59,    2,    0,    0,    0,    0,    0,    0,    0,    0, 
   4,    9,   38,   42,   57,   61,   14,   28,    0,    0,    0,    0,    0,    0,    0,    0, 
   5,   28,  -20,   33,   35,  -25,  -15,   -2,    0,    0,    0,    0,    0,    0,    0,    0, 
    },
    {
   6,    9,   12,   22,   15,    2,    1,  -40,    0,    0,    0,    0,    0,    0,    0,    0, 
 -11,    6,   16,   24,   23,   28,   24,   23,    0,    0,    0,    0,    0,    0,    0,    0, 
 -15,   11,    1,    4,    6,   12,   17,    4,    0,    0,    0,    0,    0,    0,    0,    0, 
   1,  -24,   -3,   -5,    2,   -1,    5,    2,    0,    0,    0,    0,    0,    0,    0,    0, 
 -33,  -14,  -15,  -25,  -25,   -7,  -12,   -9,    0,    0,    0,    0,    0,    0,    0,    0, 
  -5,  -19,   -2,  -22,  -10,   30,    6,   22,    0,    0,    0,    0,    0,    0,    0,    0, 
 -18,  -42,  -24,  -15,  -46,   17,  -15,   41,    0,    0,    0,    0,    0,    0,    0,    0, 
 -30,  -45,   -8,  -52,   47,   32,   16,   32,    0,    0,    0,    0,    0,    0,    0,    0, 

    },
    {
  -9,   50,   28,  -61,   -4,  -33,   30,   23,    0,    0,    0,    0,    0,    0,    0,    0, 
  11,   15,  -20,  -56,  -45,  -28,    9,    9,    0,    0,    0,    0,    0,    0,    0,    0, 
 -38,   10,  -29,  -50,  -59,  -45,  -16,  -44,    0,    0,    0,    0,    0,    0,    0,    0, 
 -68,   12,  -21,  -88,  -90,  -57,  -75, -122,    0,    0,    0,    0,    0,    0,    0,    0, 
 -28,   -7,    8,   -8,  -26,  -25,  -18, -122,    0,    0,    0,    0,    0,    0,    0,    0, 
 -15,   36,   60,    8,   33,   67,   97,  -50,    0,    0,    0,    0,    0,    0,    0,    0, 
  31,   24,    4,   33,   -6,   -6,  -46,  -58,    0,    0,    0,    0,    0,    0,    0,    0, 
 -72,   33,   23,  -11,  -73,  -53,   10,    9,    0,    0,    0,    0,    0,    0,    0,    0, 
    }

};


const int pstbonusese[6][0x80] = {
    {
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
  34,   32,   25,   25,   36,   25,   12,   17,    0,    0,    0,    0,    0,    0,    0,    0, 
  33,   30,   21,   23,   27,   20,   17,   18,    0,    0,    0,    0,    0,    0,    0,    0, 
  36,   37,   22,   17,   16,   18,   22,   20,    0,    0,    0,    0,    0,    0,    0,    0, 
  54,   46,   31,   13,   15,   16,   31,   33,    0,    0,    0,    0,    0,    0,    0,    0, 
  70,   67,   36,    4,  -12,    5,   38,   50,    0,    0,    0,    0,    0,    0,    0,    0, 
 103,   74,   79,   43,   46,   24,   73,  107,    0,    0,    0,    0,    0,    0,    0,    0, 
   0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0, 
    },
    {
 -12,  -31,  -16,   -7,  -19,  -16,  -32,  -41,    0,    0,    0,    0,    0,    0,    0,    0, 
 -40,  -12,  -16,  -18,  -15,  -28,  -20,  -41,    0,    0,    0,    0,    0,    0,    0,    0, 
 -25,  -13,  -12,    8,    4,  -16,  -27,  -18,    0,    0,    0,    0,    0,    0,    0,    0, 
  -9,  -10,   14,   17,   18,    8,    1,   -7,    0,    0,    0,    0,    0,    0,    0,    0, 
  -5,   -2,   25,   19,   21,   10,    5,  -11,    0,    0,    0,    0,    0,    0,    0,    0, 
 -18,  -22,   12,    7,   -8,  -15,  -26,  -44,    0,    0,    0,    0,    0,    0,    0,    0, 
  -8,    4,  -35,    1,   -6,  -30,  -20,  -48,    0,    0,    0,    0,    0,    0,    0,    0, 
 -32,  -31,   -1,  -31,  -13,  -28,  -40,  -81,    0,    0,    0,    0,    0,    0,    0,    0, 
    },
    {
  -9,   -7,   -3,   -7,   -7,    0,   -2,  -10,    0,    0,    0,    0,    0,    0,    0,    0, 
 -11,  -17,  -14,   -6,   -7,  -12,  -14,  -25,    0,    0,    0,    0,    0,    0,    0,    0, 
  -9,   -2,    4,    4,   11,   -3,   -4,   -8,    0,    0,    0,    0,    0,    0,    0,    0, 
  -9,   -4,    6,   13,    2,    5,   -8,  -11,    0,    0,    0,    0,    0,    0,    0,    0, 
  -2,    0,    7,    9,   10,    6,   -3,    3,    0,    0,    0,    0,    0,    0,    0,    0, 
   8,   -8,   -5,   -7,   -4,   -2,   -4,    8,    0,    0,    0,    0,    0,    0,    0,    0, 
   5,   -6,    3,   -6,  -10,  -10,   -3,    3,    0,    0,    0,    0,    0,    0,    0,    0, 
 -13,  -11,    5,    7,   -2,   -2,   -7,  -21,    0,    0,    0,    0,    0,    0,    0,    0, 
    },
    {
  -7,  -10,   -6,  -10,  -16,  -13,  -11,  -21,    0,    0,    0,    0,    0,    0,    0,    0, 
  -6,   -7,   -3,   -6,  -19,  -21,  -19,   -2,    0,    0,    0,    0,    0,    0,    0,    0, 
   3,    1,   -5,    0,  -12,  -17,  -16,  -11,    0,    0,    0,    0,    0,    0,    0,    0, 
  11,   15,    9,    6,   -1,   -1,   -7,    1,    0,    0,    0,    0,    0,    0,    0,    0, 
  20,   15,   17,    3,    1,    2,    4,   11,    0,    0,    0,    0,    0,    0,    0,    0, 
  19,   17,   12,    7,   13,   -4,   -6,    4,    0,    0,    0,    0,    0,    0,    0,    0, 
  13,   17,   13,    8,   -6,   -3,   13,    8,    0,    0,    0,    0,    0,    0,    0,    0, 
  15,    7,   28,    6,    6,   21,   16,   14,    0,    0,    0,    0,    0,    0,    0,    0, 
    },
    {
 -28,  -38,  -16,  -23,   -6,  -38,  -21,  -27,    0,    0,    0,    0,    0,    0,    0,    0, 
  -9,  -17,  -27,  -25,  -21,  -32,  -55,  -52,    0,    0,    0,    0,    0,    0,    0,    0, 
  13,  -25,   30,   11,   22,   20,    5,    9,    0,    0,    0,    0,    0,    0,    0,    0, 
 -12,   52,   32,   61,   44,   23,   19,    8,    0,    0,    0,    0,    0,    0,    0,    0, 
  34,   36,   38,   74,   79,   35,   48,   21,    0,    0,    0,    0,    0,    0,    0,    0, 
  -8,   17,   19,   65,   65,   17,    6,  -11,    0,    0,    0,    0,    0,    0,    0,    0, 
   3,   42,   51,   62,   80,   27,   37,   -2,    0,    0,    0,    0,    0,    0,    0,    0, 
 -12,   43,   30,   51,   -5,    5,   -9,  -12,    0,    0,    0,    0,    0,    0,    0,    0, 
    },
    {
 -69,  -56,  -29,  -10,  -29,  -16,  -44,  -76,    0,    0,    0,    0,    0,    0,    0,    0, 
 -37,  -19,    5,   16,   14,    6,  -12,  -32,    0,    0,    0,    0,    0,    0,    0,    0, 
 -24,   -8,   15,   28,   32,   19,    1,  -13,    0,    0,    0,    0,    0,    0,    0,    0, 
 -22,   -6,   25,   49,   49,   35,   21,    3,    0,    0,    0,    0,    0,    0,    0,    0, 
 -16,   16,   31,   37,   42,   44,   32,   17,    0,    0,    0,    0,    0,    0,    0,    0, 
   1,   15,   16,   28,   26,   41,   35,   12,    0,    0,    0,    0,    0,    0,    0,    0, 
 -18,   14,   19,   13,   22,   41,   33,   20,    0,    0,    0,    0,    0,    0,    0,    0, 
 -76,  -36,  -35,  -17,    0,   18,    1,  -16,    0,    0,    0,    0,    0,    0,    0,    0, 
    }
};

const int bishop_pair[9] = {55,   70,   47,   47,   40,   34,   31,   34,   37};
const int passedmgbonus[8] = {4,   -9,  -19,  -13,   11,   -1,   11,    0,};
const int passedegbonus[8] = {58,    9,   12,   40,   68,  154,  174,    0};

const int blockedmgbonus[8] = {4,  -16,  -21,  -18,   -3,    9,  -18,    0,};
const int blockedegbonus[8] = {58,   13,   21,   27,   27,   45,   78,    0};

const int protectedpassedmg[8] = {0,    0,    9,    6,    9,   51,   29,    0};
const int protectedpassedeg[8] = {0,    0,    3,    1,    6,    2,   -1,    0};


const int blockedprotectedmg[8] = {0,    0,   -1,   -2,   13,   55,   54,    0};
const int blockedprotectedeg[8] = {0,    0,   15,   11,   19,   24,   14,    0};

const int candidatepassedmg[8] = {0,  -30,  -35,    3,   34,   48,    0,    0};
const int candidatepassedeg[8] = {0,   -3,   24,   37,   60,  106,    0,    0};

const int mobilitybonusesmg[4][28] = {
 {-32,  -19,   -8,   -2,    3,    8,   15,   22,   34,},
 {-28,  -18,   -8,   -1,    6,   10,   14,   16,   17,   20,   33,   55,   35,   63, },
 {-32,  -19,  -16,  -12,  -12,   -5,   -1,    6,   12,   16,   22,   25,   32,   35,   14, },
  {-2,  -14,  -28,  -27,  -26,  -22,  -18,  -16,  -12,  -10,   -8,   -5,   -3,   -3,   -1,    2,   -7,   -6,    2,   10,   16,   44,   30,   20,   24,    9,    2,    0, }};

const int mobilitybonuseseg[4][28] = {
 {-67,  -13,   10,   21,   28,   36,   36,   32,   22, },
 {-44,  -21,   -4,   10,   20,   31,   35,   39,   44,   43,   36,   33,   46,   32, },
 {-16,   18,   28,   34,   44,   48,   55,   59,   63,   68,   70,   75,   76,   74,   87, },
  { 0,   -3,   -7,  -11,  -15,  -19,  -18,  -13,  -11,   -7,   -3,    1,    1,    5,    6,    7,   27,   25,   21,   15,   16,    2,    5,   13,   16,   12,    3,   -1, }};
const int doubledpen = -16;
const int isopen = -13;
const int backwardspen = -4;

const int kingdangertablemg[4][100] = {

{
   0,    0,    1,    2,   44,   39,   54,   77,   88,   65, 
  76,  114,   95,  138,  139,   92,  188,  150,  218,  162, 
 144,  212,  185,  243,  199,  146,  246,  193,  229,  181, 
 242,  246,  229,  235,  248,  308,  274,  232,  251,  277, 
 283,  267,  273,  261,  294,  246,  234,  249,  258,  324, 
 366,  294,  302,  359,  365,  404,  418,  421,  437,  451, 
 493,  494,  492,  472,  490,  486,  491,  492,  498,  480, 
 496,  500,  495,  500,  495,  498,  500,  497,  500,  489, 
 500,  498,  499,  500,  492,  500,  500,  500,  500,  495, 
 500,  498,  500,  500,  500,  500,  500,  500,  500,  500, 
},
{
   0,    0,    1,    2,   21,    9,   32,   29,   55,   37, 
  19,   46,   44,   69,   44,   31,   97,   44,  110,   77, 
  36,  119,   63,  136,  106,   71,  137,  111,  154,  121, 
 123,  163,  182,  169,  211,  248,  212,  238,  205,  201, 
 275,  225,  232,  233,  234,  233,  250,  249,  222,  338, 
 343,  351,  318,  336,  340,  416,  390,  436,  445,  444, 
 464,  491,  469,  486,  488,  488,  490,  491,  491,  491, 
 491,  494,  498,  500,  496,  498,  498,  500,  500,  499, 
 500,  500,  499,  498,  500,  500,  495,  500,  500,  500, 
 500,  500,  500,  501,  500,  500,  500,  497,  500,  501, 
},
{
   0,    0,    1,    2,   -3,   -6,    3,    1,   14,    8, 
   0,   11,    8,   25,   14,    5,   40,    9,   54,   26, 
  18,   47,   41,   76,   52,   33,   74,   73,  109,   84, 
  77,   99,  121,  120,   97,  148,  148,  194,  165,  140, 
 162,  220,  190,  180,  229,  260,  262,  272,  295,  314, 
 371,  361,  347,  360,  390,  437,  427,  447,  445,  454, 
 495,  494,  485,  483,  497,  493,  489,  496,  500,  500, 
 500,  500,  500,  500,  500,  500,  496,  500,  500,  499, 
 500,  500,  499,  500,  500,  500,  500,  500,  500,  500, 
 500,  498,  500,  500,  500,  500,  500,  500,  500,  500, 
},
{
   0,    0,    1,    2,  -15,  -13,  -15,  -13,  -15,   -9, 
  -4,   -2,   -6,    1,   -2,   -1,   10,   11,   14,    4, 
  -4,   19,   17,   14,    9,   22,   12,   28,   41,   24, 
  15,   45,   45,   79,   85,  132,  132,  127,  231,  211, 
 183,  216,  206,  278,  263,  289,  330,  301,  320,  338, 
 387,  377,  359,  386,  395,  437,  446,  460,  460,  460, 
 495,  494,  491,  490,  497,  492,  493,  496,  500,  500, 
 500,  500,  500,  500,  500,  500,  500,  500,  500,  499, 
 500,  500,  499,  500,  500,  500,  500,  500,  500,  500, 
 500,  500,  500,  500,  500,  500,  500,  500,  500,  500, 
}
};

const int kingdangertableeg[4][100] = {

{
   0,    0,    1,    2,  -10,   35,  -12,    2,  -17,    0, 
  14,   -5,   -4,  -33,   -5,   10,  -38,  -10,  -48,   -3, 
  34,  -53,   37,  -43,  -13,   45,    1,   25,   26,   78, 
  10,   43,   44,  118,   93,  -24,   27,  100,  145,  144, 
 111,   96,   90,  202,  256,  208,  190,  190,  212,  310, 
 351,  288,  292,  317,  350,  409,  398,  423,  440,  442, 
 493,  494,  488,  481,  488,  484,  490,  493,  498,  488, 
 498,  500,  497,  500,  494,  498,  500,  499,  500,  492, 
 500,  498,  499,  500,  496,  500,  500,  500,  500,  497, 
 500,  498,  500,  500,  500,  500,  500,  500,  500,  500, 
},
{
   0,    0,    1,    2,    1,   16,  -10,   11,   -9,   -7, 
  16,   -7,   -6,  -10,   12,   21,  -20,   25,  -25,   20, 
  47,  -17,   75,  -10,    3,   50,   17,   57,   34,   59, 
  27,   76,   44,  105,   17,  -34,   57,   59,  123,  167, 
 102,  118,  120,  199,  221,  204,  231,  245,  227,  326, 
 345,  352,  313,  333,  352,  426,  406,  444,  449,  435, 
 477,  493,  474,  486,  491,  489,  492,  493,  493,  494, 
 494,  498,  498,  500,  496,  498,  498,  500,  500,  499, 
 500,  500,  499,  499,  500,  500,  497,  500,  500,  500, 
 500,  500,  500,  500,  500,  500,  500,  499,  500,  500, 
},
{
   0,    0,    1,    2,    3,    3,  -10,    7,  -10,   -5, 
  -2,   -6,   -6,  -18,    7,   11,  -28,   22,  -28,   10, 
  11,   -2,   12,  -10,   11,   18,   27,   29,   45,   25, 
  52,   64,   60,  111,   85,  102,  105,  126,  193,  129, 
 152,  206,  193,  190,  242,  269,  287,  278,  307,  331, 
 382,  366,  347,  362,  388,  437,  431,  452,  452,  459, 
 495,  494,  485,  486,  497,  493,  489,  496,  500,  500, 
 500,  500,  500,  500,  500,  500,  496,  500,  500,  499, 
 500,  500,  499,  500,  500,  500,  500,  500,  500,  500, 
 500,  498,  500,  500,  500,  500,  500,  500,  500,  500, 
},
{
   0,    0,    1,    2,    3,    2,   -2,    7,   -6,   -3, 
  -9,   -4,   -1,   -7,   -3,  -18,    1,  -13,  -31,    3, 
   6,   43,   -5,   14,   28,   21,   72,   96,   65,   28, 
 128,   78,  138,  146,  129,  132,  141,  143,  234,  212, 
 197,  239,  211,  277,  277,  290,  325,  304,  319,  350, 
 388,  377,  359,  386,  394,  437,  446,  460,  460,  462, 
 495,  494,  491,  490,  497,  492,  493,  496,  500,  500, 
 500,  500,  500,  500,  500,  500,  500,  500,  500,  499, 
 500,  500,  499,  500,  500,  500,  500,  500,  500,  500, 
 500,  500,  500,  500,  500,  500,  500,  500,  500,  500, 
}
};

const int slide[5] = {0, 1, 1, 1, 0};
const int vectors[5] = {8, 4, 4, 8, 8};
const int vector[5][8] = {
    {SSW, SSE, WSW, ESE, WNW, ENE, NNW, NNE},
    {SW, SE, NW, NE},
    {SOUTH, WEST, EAST, NORTH},
    {SW, SOUTH, SE, WEST, NW, EAST, NE, NORTH},
    {SW, SOUTH, SE, WEST, NW, EAST, NE, NORTH}};

struct move
{
    unsigned short int move;
    // use >>8 to get SQUAREFROM and &FF to get SQUARETO
    unsigned char flags;
    // in form 0000 xx yy
    // xx = flags - 00 normal 01 promotion 10 castling 11 ep - if = 1 then yy flags - 00 knight 01 bishop 10 rook 11 queen
    // get xxflags with >>2, and yyflags with &11
};

struct board_info
{
    unsigned char board[0x80];
    unsigned char pnbrqcount[2][5];
    bool castling[2][2];
    unsigned char kingpos[2];
    unsigned char epsquare;
};

struct movelist
{
    struct move move;
    // char fen[65];
    long long unsigned int fen;
    char halfmoves;
    int staticeval;
};
struct list
{
    struct move move;
    int eval;
};

struct ttentry
{
    unsigned long long int zobrist_key;
    char type;
    // come in three types:
    // 2: EXACT, 2: FAIL-HIGH, 1: FAIL-LOW
    struct move bestmove;
    int eval;
    char depth;
    short int age;
};

const struct move nullmove = {0, 0};
const struct ttentry nullTT = {0, 0, {0, 0}, 0, 0, 0};

const int boardsize = sizeof(struct board_info);
const int listsize = sizeof(struct list);
const int movesize = sizeof(struct move);
const int attacknums[4] = {2, 2, 3, 5};

const int pieceattacksbonus[4][4] = {
    {28, 33, 41, 27},
    {0, 17, 13, 7},
    {13, 0, 14, 38},
    {0, 0, 0, 40}};
const int multattacksbonus = 25;

#endif